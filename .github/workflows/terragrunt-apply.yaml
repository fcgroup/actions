name: Terragrunt Apply
on:
  workflow_call:
    inputs:
      stacks:
        description: A JSON array of base stack directories.
        required: true
        type: string
      changeDetectionExpression:
        description: The regular expression pattern (passed to `grep -E`) that is used to match applicable files in a changeset.
        required: false
        type: string
        default: .*\.(hcl|json|yaml)$
    secrets:
      GIT_TOKEN_BASIC:
        required: true
      CI_BOT_SSH_KEY:
        required: true
      SOPS_GPG_KEY:
        required: true
      SOPS_GPG_KEY_ID:
        required: true
      SOPS_GPG_KEY_PASSPHRASE:
        required: true
      SOPS_GPG_KEY_SUBJECT:
        required: true
      AZUREAD_CLIENT_ID:
        required: false
      AZUREAD_CLIENT_SECRET:
        required: false
jobs:
  terragrunt-apply:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack: ${{ fromJson(inputs.stacks) }}
    steps:
      - uses: actions/checkout@v4
        with:
          # We haven't officially standardized on squash merges, so the number of commits since the last tag is indeterminate.
          # We'll need to pull the full history until the conversations around squash merges are finalized.
          fetch-depth: 0 # https://github.com/actions/checkout#fetch-all-history-for-all-tags-and-branches
          submodules: recursive
          token: ${{ secrets.GIT_TOKEN_BASIC || github.token }}

      - uses: actions/checkout@v4
        with:
          repository: fcgroup/actions
          path: ./.actions/

      - id: verify_files_changed
        name: Verify Files Changed
        run: |
          ./.actions/scripts/utilities/verify-files-changed.sh \
          '${{ matrix.stack }}' \
          '${{ inputs.changeDetectionExpression }}'
        shell: bash

      - uses: Homebrew/actions/setup-homebrew@master
        if: steps.verify_files_changed.outputs.files_changed == 'true'

      - name: Install Homebrew packages
        if: steps.verify_files_changed.outputs.files_changed == 'true'
        run: brew install terragrunt sops
        shell: bash

      - name: Import SSH key
        if: steps.verify_files_changed.outputs.files_changed == 'true'
        run: ./.actions/scripts/utilities/import-ssh-key.sh
        shell: bash
        env:
          CI_BOT_SSH_KEY: ${{ secrets.CI_BOT_SSH_KEY }}

      - name: Import GPG key (sops)
        if: steps.verify_files_changed.outputs.files_changed == 'true'
        run: ./.actions/scripts/utilities/import-gpg-key.sh
        shell: bash
        env:
          IMPORT_GPG_KEY: ${{ secrets.SOPS_GPG_KEY }}
          IMPORT_GPG_KEY_ID: ${{ secrets.SOPS_GPG_KEY_ID }}
          IMPORT_GPG_KEY_PASSPHRASE: ${{ secrets.SOPS_GPG_KEY_PASSPHRASE }}
          IMPORT_GPG_KEY_SUBJECT: ${{ secrets.SOPS_GPG_KEY_SUBJECT }}
          SET_GIT_GPG_CONFIG: false

      # TODO: Add auth setup steps for each of the supported providers.
      # Need to consider how we want to leverage environments for `dev` and `prod`, etc.

      - name: Terragrunt apply
        if: steps.verify_files_changed.outputs.files_changed == 'true'
        run: ./.actions/scripts/terraform/run-terragrunt-apply.sh '${{ matrix.stack }}'
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN_BASIC }}
          ARM_CLIENT_ID: ${{ secrets.AZUREAD_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZUREAD_CLIENT_SECRET }}
